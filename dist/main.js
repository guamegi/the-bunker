/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/data/projects.js":
/*!******************************!*\
  !*** ./src/data/projects.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   projects: () => (/* binding */ projects)\n/* harmony export */ });\nconst projects = [\n  {\n    no: 10,\n    name: \"GenChat AI\",\n    period: \"2025.03\",\n    images: [\n      \"src/images/projects/genChat/1.png\",\n      \"src/images/projects/genChat/2.png\",\n    ],\n    desc: \"GoogleGenerativeAI를 활용한 챗봇. 사용자가 입력한 문장을 기반으로 챗봇이 응답(이미지)을 생성. 사용자가 챗봇과 대화하며 새로운 이미지를 생성할 수 있음.\",\n    func: \"사용자 입력 문장을 기반으로 챗봇이 응답 이미지 생성, 챗봇과 대화, Light/Dark 테마 지원\",\n    github: \"https://github.com/guamegi/gen-chat\",\n    url: \"https://guamegi.github.io/gen-chat/\",\n    stack: \"React.js, generative-ai, Webpack\",\n  },\n  {\n    no: 9,\n    name: \"The Bunker\",\n    period: \"2023.09\",\n    images: [\n      \"src/images/projects/theBunker/1.png\",\n      \"src/images/projects/theBunker/2.png\",\n      \"src/images/projects/theBunker/3.png\",\n    ],\n    desc: \"새로운 My Portfolio 사이트를 구상하던 중, 건물 내 엘리베이터에 영감을 받아 기존 밋밋했던 스크롤 이동 방식을 Canvas를 이용하여 층 이동을 구현해보면 재미있을 것 같아서 작업.\",\n    func: \"엘리베이터 내 층 버튼 누르면 LED 층 수가 바뀌며 문 열리는 애니메이션, 해당 층으로 이동하여 해당 섹션을 확인, 해당 섹션에서 엘리베이터로 다시 탑승\",\n    github: \"https://github.com/guamegi/the-bunker\",\n    url: \"https://guamegi.github.io/the-bunker/\",\n    stack: \"HTML5, CSS3, Javascript, Canvas, Webpack, Tailwindcss\",\n  },\n  {\n    no: 8,\n    name: \"영어 타자 연습\",\n    period: \"2023.09\",\n    images: [\n      \"src/images/projects/typing/1.png\",\n      \"src/images/projects/typing/2.png\",\n      \"src/images/projects/typing/3.png\",\n    ],\n    desc: \"영어 단어, 문장 타자 연습기. random (word/quote) api 호출하여 영어 단어나 문장을 데이터로 활용\",\n    func: \"영어 타자 속도, 정확도, 오타 횟수 등 상태를 체크.\",\n    github: \"https://github.com/guamegi/typing-exam\",\n    url: \"https://guamegi.github.io/typing-exam/\",\n    stack: \"HTML5, CSS3, Javascript\",\n  },\n  {\n    no: 7,\n    name: \"Sally's Tarot\",\n    period: \"2023.04 ~ 05\",\n    images: [\n      \"src/images/projects/sallyTarot/1.png\",\n      \"src/images/projects/sallyTarot/2.png\",\n      \"src/images/projects/sallyTarot/3.png\",\n      \"src/images/projects/sallyTarot/4.png\",\n      \"src/images/projects/sallyTarot/5.png\",\n      \"src/images/projects/sallyTarot/6.png\",\n      \"src/images/projects/sallyTarot/7.png\",\n      \"src/images/projects/sallyTarot/8.png\",\n    ],\n    desc: `타로 카드를 사용하여 미래를 예측하는 모바일 타로 앱. One card로 현재 상황을 해석하고, Three cards로 과거 / 현재 / 미래를 풀이. 영어와 한국어의 다국어 지원. 생성형 이미지 AI 툴인 stable diffusion을 이용해 디자인 활용.`,\n    func: \"One or Three cards 설정/선택, 선택한 카드 로컬DB 저장, 공유 기능, 다국어 지원(영어/한국어)\",\n    github: \"https://github.com/guamegi/sally-tarot\",\n    // url: \"https://play.google.com/store/apps/details?id=com.guamegi.sallytarot\",\n    stack: \"React Native(CRNA), Styled-Components, i18next, Realm\",\n  },\n  {\n    no: 6,\n    name: \"Mooving\",\n    period: \"2023.03 ~ 04\",\n    images: [\n      \"src/images/projects/mooving/1.png\",\n      \"src/images/projects/mooving/2.png\",\n    ],\n    desc: `TMDB의 무료 API 이용해 국내 및 해외의 인기 영화와 TV 프로그램의 평점과 정보들을 제공. 섹션별 컨텐츠 제공 및 상세 내용 안내, 내가 알고싶은 영상 컨텐츠 검색 기능 제공. 인앱브라우저 기능으로 유튜브 트레일러 영상을 지원. `,\n    func: \"영화, TV 프로그램 정보 제공, 검색 기능, 인앱브라우저, Light/Dark 테마 지원\",\n    github: \"https://github.com/guamegi/mooving\",\n    // url: \"https://play.google.com/store/apps/details?id=com.guamegi.mooving\",\n    stack: \"React Native, TypeScript, Styled-Components, react-query\",\n  },\n  {\n    no: 5,\n    name: \"Chart Simulator\",\n    period: \"2022.10 ~ 현재\",\n    images: [\n      \"src/images/projects/chartSimulator/1.png\",\n      \"src/images/projects/chartSimulator/2.png\",\n    ],\n    desc: `데이터를 기반으로 종목과 여러 보조지표를 선택하고 AI를 활용해 확률적 결과를 도출하는 시뮬레이터. 주식이나 가상화폐 등 투자자가 최적의 지표를 찾는데 도움을 주고, 히스토리 데이터를 통해 차트 분석 서포팅 목적.`,\n    func: \"종목과 보조지표 선택에 따른 합성 차트 생성, 예측\",\n    github: \"https://github.com/guamegi/chart-simulator\",\n    // url: \"https://guamegi.github.io/image-classification/\",\n    stack: \"Next.js, Tailwindcss, Zustand\",\n  },\n  {\n    no: 4,\n    name: \"Image Classification\",\n    period: \"2022.09\",\n    images: [\n      \"src/images/projects/imageClassification/1.png\",\n      \"src/images/projects/imageClassification/2.png\",\n    ],\n    desc: `AI로 이미지를 해석하고 동적 object로 만드는 것에 관심. 관련 방법을 알아보던 중 머신러닝 모델을 이용하여 구현 가능성을 찾게 됨. \n    먼저 간단한 앱을 만들어 보는데 의의. TensorFlow.js 를 활용해 업로드 한 이미지를 분석.`,\n    func: \"TensorFlow.js로 업로드 한 이미지 분석\",\n    github: \"https://github.com/guamegi/image-classification\",\n    url: \"https://guamegi.github.io/image-classification/\",\n    stack: \"HTML5, CSS3, Javascript, TensorFlow.js\",\n  },\n  {\n    no: 3,\n    name: \"My Portfolio\",\n    period: \"2022.07 ~ 08\",\n    images: [\n      \"src/images/projects/myPortfolio/1.png\",\n      \"src/images/projects/myPortfolio/2.png\",\n    ],\n    desc: `본인의 간략한 소개와 개인 프로젝트 내용을 담은 포트폴리오 사이트. 진행했던 개인 프로젝트들의 이력을 남기고자 만들게 됨.`,\n    func: \"css 및 wow.js, animate.css를 적용한 간단한 애니메이션\",\n    github: \"https://github.com/guamegi/reactjs-portfolio\",\n    url: \"https://guamegi.github.io/reactjs-portfolio/\",\n    stack: \"React.js, Bootstrap, SCSS\",\n  },\n  {\n    no: 2,\n    name: \"ChartBook\",\n    period: \"2022.05 ~ 06\",\n    images: [\n      \"src/images/projects/chartBook/1.png\",\n      \"src/images/projects/chartBook/2.png\",\n    ],\n    desc: `내가 보유한 주식과 가상화폐의 투자 자산 현황을 실시간으로 모니터링.\n    총 자산 현황을 파악하기 위해 각각의 앱에 들어가서 계산해야 하는 \n    불편함이 계기가 되어 개발.\n    `,\n    func: \"가상화폐 웹소켓 실시간 시세, 주식 시세 크롤링, chart 라이브러리 활용 차트생성\",\n    github: \"https://github.com/guamegi/chart-book-nodejs\",\n    url: \"https://port-0-chart-book-nodejs-jvpb2aln39jnz0.sel5.cloudtype.app/\",\n    stack:\n      \"React.js, Bootstrap, Websocket, Chart.js, Tradingview-lightweight, cloudtype, zustand\",\n  },\n  {\n    no: 1,\n    name: \"Dynamic Chart Sample\",\n    period: \"2019.07 ~ 12, 2022.07 ~\",\n    images: [\n      \"src/images/projects/dynamicChart/1.png\",\n      \"src/images/projects/dynamicChart/2.png\",\n    ],\n    desc: `실시간 차트를 이용한 트레이딩 플랫폼을 검토하기 위해\n    2인이 Canvas를 사용하여 프로토타입 개발. 임시 중단된 legacy 활용 검토 중.\n    샘플 데이터를 생성해 동적 차트 생성과 서큘러 큐\n    방식의 데이터 구조 활용.\n    `,\n    func: \"샘플 데이터를 이용한 동적 차트 생성 및 차트 설정\",\n    github: \"https://github.com/guamegi/dynamic-chart-sample\",\n    url: \"https://guamegi.github.io/dynamic-chart-sample/\",\n    stack: \"HTML5, CSS3, Javascript, HTML5 Canvas\",\n  },\n];\n\n\n//# sourceURL=webpack://the-bunker/./src/data/projects.js?");

/***/ }),

/***/ "./src/data/skills.js":
/*!****************************!*\
  !*** ./src/data/skills.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   skills: () => (/* binding */ skills)\n/* harmony export */ });\nconst skills = [\n  {\n    category: \"Front-End\",\n    name: \"HTML5 / CSS3 / Javascript\",\n    percentage: 90,\n    color: \"blue\",\n  },\n  {\n    category: \"Front-End\",\n    name: \"JQuery\",\n    percentage: 90,\n    color: \"blue\",\n  },\n  {\n    category: \"Front-End\",\n    name: \"ReactJS\",\n    percentage: 85,\n    color: \"blue\",\n  },\n\n  {\n    category: \"Front-End\",\n    name: \"NextJS\",\n    percentage: 80,\n    color: \"blue\",\n  },\n\n  {\n    category: \"Front-End\",\n    name: \"VueJs\",\n    percentage: 80,\n    color: \"blue\",\n  },\n  {\n    category: \"Front-End\",\n    name: \"ContextApi / Redux / Zustand\",\n    percentage: 80,\n    color: \"blue\",\n  },\n  {\n    category: \"Front-End\",\n    name: \"Bootstrap / Tailwindcss / SCSS\",\n    percentage: 85,\n    color: \"blue\",\n  },\n  {\n    category: \"Back-End\",\n    name: \"ExpressJS\",\n    percentage: 75,\n    color: \"purple\",\n  },\n  {\n    category: \"Back-End\",\n    name: \"MySQL\",\n    percentage: 70,\n    color: \"purple\",\n  },\n  {\n    category: \"Mobile App\",\n    name: \"Flutter\",\n    percentage: 65,\n    color: \"red\",\n  },\n  {\n    category: \"Mobile App\",\n    name: \"React Native\",\n    percentage: 85,\n    color: \"red\",\n  },\n  {\n    category: \"Version Control\",\n    name: \"Git\",\n    percentage: 85,\n    color: \"green\",\n  },\n  {\n    category: \"Version Control\",\n    name: \"SVN\",\n    percentage: 75,\n    color: \"green\",\n  },\n  {\n    category: \"Communication\",\n    name: \"Figma\",\n    percentage: 80,\n    color: \"yellow\",\n  },\n  {\n    category: \"Communication\",\n    name: \"Swagger\",\n    percentage: 85,\n    color: \"yellow\",\n  },\n  {\n    category: \"Communication\",\n    name: \"Redmine\",\n    percentage: 85,\n    color: \"yellow\",\n  },\n  {\n    category: \"Communication\",\n    name: \"Gira / Confluence\",\n    percentage: 75,\n    color: \"yellow\",\n  },\n  {\n    category: \"Communication\",\n    name: \"Slack\",\n    percentage: 85,\n    color: \"yellow\",\n  },\n];\n\n\n//# sourceURL=webpack://the-bunker/./src/data/skills.js?");

/***/ }),

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_Numeral_LED_Matrix_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/Numeral_LED_Matrix.js */ \"./src/lib/Numeral_LED_Matrix.js\");\n/* harmony import */ var _lib_Project_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/Project.js */ \"./src/lib/Project.js\");\n/* harmony import */ var _lib_SkillBars_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/SkillBars.js */ \"./src/lib/SkillBars.js\");\n/* harmony import */ var _data_projects_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/projects.js */ \"./src/data/projects.js\");\n/* harmony import */ var _data_skills_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/skills.js */ \"./src/data/skills.js\");\n\n\n\n\n\n\nconst canvasDoors = document.querySelector(\"#canvasDoors\");\nconst canvasLED1_1 = document.querySelector(\"#canvasLED1_1\");\nconst canvasLED1_2 = document.querySelector(\"#canvasLED1_2\");\nconst canvasLED2_1 = document.querySelector(\"#canvasLED2_1\");\nconst canvasLED2_2 = document.querySelector(\"#canvasLED2_2\");\n\nconst ctxDoors = canvasDoors.getContext(\"2d\");\n\nconst wrapper = document.querySelector(\"#wrapper\");\nconst elevatorBtn = document.querySelector(\"#elevatorBtn\");\n\nconst DOOR_WIDTH = 150;\nlet DOOR_HEIGHT = wrapper.clientHeight;\n\nlet seletedSection = \"section1\";\nlet leftDoorImg;\nlet rightDoorImg;\n\nlet leftDoorX = 0;\nlet rightDoorX = 151;\n\nconst led1_1 = new _lib_Numeral_LED_Matrix_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0, { canvas: canvasLED1_1 });\nconst led1_2 = new _lib_Numeral_LED_Matrix_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0, { canvas: canvasLED1_2 });\nconst led2_1 = new _lib_Numeral_LED_Matrix_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0, { canvas: canvasLED2_1 });\nconst led2_2 = new _lib_Numeral_LED_Matrix_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0, { canvas: canvasLED2_2 });\n\n_data_skills_js__WEBPACK_IMPORTED_MODULE_4__.skills.forEach((obj, idx, all) => {\n  new _lib_SkillBars_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](obj).createEl(idx, all);\n});\n_data_projects_js__WEBPACK_IMPORTED_MODULE_3__.projects.forEach((obj) => {\n  new _lib_Project_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](obj).createEl();\n});\n\nconst init = () => {\n  makeDoors();\n  changeNumeralLED(\"L\");\n  moveToSection();\n};\n\nconst modal = document.querySelector(\".modalWrapper\");\nconst swiperWrapper = document.querySelector(\".swiper-wrapper\");\n\nconst showModal = (images) => {\n  // console.log(\"show modal\");\n  modal.classList.remove(\"hidden\");\n  // swiper-wrapper children 제거\n  swiperWrapper.innerHTML = \"\";\n\n  // 경로 추출\n  const imagesArr = images.split(\",\");\n\n  let el = \"\";\n  // wiper-wrapper에 image slice 삽입\n  imagesArr.forEach((image) => {\n    el += `<div class=\"swiper-slide\">\n            <img src='${image}' />\n          </div>`;\n  });\n  swiperWrapper.insertAdjacentHTML(\"beforeend\", el);\n};\n\nconst closeModal = () => {\n  // console.log(\"close\", swiper);\n  modal.classList.add(\"hidden\");\n  swiper.activeIndex = 0;\n};\n\nconst changeNumeralLED = (stair) => {\n  let leftNum;\n  let rightNum;\n  switch (stair) {\n    case \"L\":\n      leftNum = 0;\n      rightNum = 3;\n      break;\n    case \"-1\":\n      leftNum = 4;\n      rightNum = 1;\n      break;\n    case \"-2\":\n      leftNum = 4;\n      rightNum = 2;\n      break;\n  }\n\n  led1_1.init(leftNum, { canvas: canvasLED1_1 });\n  led1_2.init(rightNum, { canvas: canvasLED1_2 });\n  led2_1.init(leftNum, { canvas: canvasLED2_1 });\n  led2_2.init(rightNum, { canvas: canvasLED2_2 });\n};\n\nconst clickPanel = (stair) => {\n  switch (stair) {\n    case \"L\":\n      seletedSection = \"section2\";\n      break;\n    case \"-1\":\n      seletedSection = \"section3\";\n      break;\n    case \"-2\":\n      seletedSection = \"section4\";\n      break;\n  }\n\n  changeNumeralLED(stair);\n  openDoors();\n};\n\nconst makeDoors = () => {\n  // console.log(\"make doors\");\n  canvasDoors.height = wrapper.clientHeight;\n\n  leftDoorImg = new Image();\n  rightDoorImg = new Image();\n\n  // github 주소 pathname 문제로 분기 추가\n  const href = window.location.href;\n  const panelImagePath = \"/src/images/panel.jpeg\";\n  if (href.charAt(href.length - 1) === \"/\") {\n    leftDoorImg.src = window.location.href + panelImagePath;\n    rightDoorImg.src = window.location.href + panelImagePath;\n  } else {\n    leftDoorImg.src = window.location.origin + panelImagePath;\n    rightDoorImg.src = window.location.origin + panelImagePath;\n  }\n\n  ctxDoors.clearRect(0, 0, canvasDoors.width, canvasDoors.height);\n\n  leftDoorImg.onload = () => {\n    ctxDoors.drawImage(leftDoorImg, 0, 0, DOOR_WIDTH, DOOR_HEIGHT);\n  };\n  rightDoorImg.onload = () => {\n    ctxDoors.drawImage(rightDoorImg, 151, 0, DOOR_WIDTH, DOOR_HEIGHT);\n  };\n};\n\nlet startTime;\n// open animation\nconst openDoors = () => {\n  // console.log(\"open doors\");\n  if (leftDoorX !== 0) return;\n\n  startTime = new Date().getTime();\n  setTimeout(() => {\n    requestAnimationFrame(moveDoors);\n  }, 100);\n};\n\nconst closeDoors = () => {\n  // console.log(\"close doors\");\n  ctxDoors.drawImage(leftDoorImg, 0, 0, DOOR_WIDTH, DOOR_HEIGHT);\n  ctxDoors.drawImage(rightDoorImg, 151, 0, DOOR_WIDTH, DOOR_HEIGHT);\n\n  leftDoorX = 0;\n  rightDoorX = 151;\n};\n\n// animate\nconst DURATION = 400;\nconst moveDoors = () => {\n  // console.log(\"move doors\", rightDoorX);\n  if (rightDoorX > DOOR_WIDTH * 2) {\n    moveToSection();\n    closeDoors();\n    return;\n  }\n\n  // easeOut 효과\n  let time = new Date().getTime() - startTime;\n  leftDoorX -= DURATION / time;\n  rightDoorX += DURATION / time;\n\n  ctxDoors.clearRect(0, 0, canvasDoors.width, canvasDoors.height);\n  ctxDoors.drawImage(leftDoorImg, leftDoorX, 0, DOOR_WIDTH, DOOR_HEIGHT);\n  ctxDoors.drawImage(rightDoorImg, rightDoorX, 0, DOOR_WIDTH, DOOR_HEIGHT);\n\n  leftDoorX--;\n  rightDoorX++;\n\n  requestAnimationFrame(moveDoors);\n};\n\nconst moveToSection = () => {\n  const node = document.querySelector(`#${seletedSection}`);\n\n  window.scrollTo({\n    top: node.offsetTop,\n    behavior: \"instant\", // ex: smooth\n  });\n};\n\nconst moveToTop = () => {\n  seletedSection = \"section1\";\n  elevatorBtn.children[1].style.color = \"#ff0000\";\n\n  setTimeout(() => {\n    moveToSection();\n    elevatorBtn.children[1].style.color = \"black\";\n  }, 500);\n};\n\nwindow.addEventListener(\"resize\", function () {\n  // console.log(\"resize!\", wrapper.clientHeight);\n  DOOR_HEIGHT = wrapper.clientHeight;\n  makeDoors();\n});\n\ninit();\n\n// module 방식이라 global로 보내야 함\nwindow.moveToTop = moveToTop;\nwindow.showModal = showModal;\nwindow.closeModal = closeModal;\nwindow.clickPanel = clickPanel;\n\n\n//# sourceURL=webpack://the-bunker/./src/js/main.js?");

/***/ }),

/***/ "./src/lib/Numeral_LED_Matrix.js":
/*!***************************************!*\
  !*** ./src/lib/Numeral_LED_Matrix.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Numeral_LED_Matrix)\n/* harmony export */ });\nconst board = {\n  width: 16,\n  height: 32,\n};\n\nconst axis_x_points = [\n  { from: [0, 0], to: [1, 0] },\n  { from: [0, 1], to: [1, 1] },\n  { from: [0, 2], to: [1, 2] },\n];\nconst axis_y_points = [\n  { from: [0, 0], to: [0, 1] }, // left\n  { from: [0, 1], to: [0, 2] }, // left\n  { from: [1, 0], to: [1, 1] }, // right\n  { from: [1, 1], to: [1, 2] }, // right\n];\n\nconst empty = {\n  x: [],\n  y: [],\n};\nconst one = {\n  x: [],\n  y: [2, 3],\n};\nconst two = {\n  x: [0, 1, 2],\n  y: [1, 2],\n};\nconst alphabetL = {\n  x: [2],\n  y: [0, 1],\n};\nconst hyphen = {\n  x: [1],\n  y: [],\n};\n\nconst supported_numbers = [empty, one, two, alphabetL, hyphen];\n\nconst utils = {\n  is_vertical(points) {\n    if (points.from[1] != points.to[1]) return true;\n    return false;\n  },\n  diff(first, second) {\n    return first.filter(function (value) {\n      return !second.find(function (current_item) {\n        return current_item === value;\n      });\n    });\n  },\n};\n\nclass Numeral_LED_Matrix {\n  constructor(number, options) {\n    this.init(number, options);\n  }\n\n  init(number, options) {\n    this.ctx = options.canvas.getContext(\"2d\");\n    this.reset();\n\n    const selected_num = supported_numbers[number];\n    this.ctx.save();\n    this.ctx.translate(4, 4);\n\n    this.convert_points_to_board_values(selected_num);\n    this.ctx.restore();\n  }\n\n  reset() {\n    this.ctx.clearRect(0, 0, 100, 100);\n  }\n\n  draw_line(points, isOff) {\n    let values = this.positioning_values_on_board(points);\n\n    this.ctx.save();\n    this.ctx.beginPath();\n    this.ctx.lineCap = \"round\";\n    this.ctx.lineWidth = 4;\n    this.ctx.strokeStyle = \"red\";\n    if (isOff) this.ctx.globalAlpha = 0.2;\n    this.ctx.moveTo(values.from.x, values.from.y);\n    this.ctx.lineTo(values.to.x, values.to.y);\n    this.ctx.stroke();\n    this.ctx.closePath();\n    this.ctx.restore();\n  }\n\n  convert_points_to_board_values(points) {\n    var __ = this;\n    this.x_points = axis_x_points.map(function (val, index) {\n      return index;\n    });\n    this.y_points = axis_y_points.map(function (val, index) {\n      return index;\n    });\n\n    this.x_on = points.x;\n    this.x_off = utils.diff(this.x_points, this.x_on);\n\n    this.y_on = points.y;\n    this.y_off = utils.diff(this.y_points, this.y_on);\n\n    // draw off lines\n    this.x_off.forEach(function (selected_index) {\n      __.draw_line(axis_x_points[selected_index], true);\n    });\n\n    this.y_off.forEach(function (selected_index) {\n      __.draw_line(axis_y_points[selected_index], true);\n    });\n\n    // draw on lines\n    this.x_on.forEach(function (selected_index) {\n      __.draw_line(axis_x_points[selected_index]);\n    });\n\n    this.y_on.forEach(function (selected_index) {\n      __.draw_line(axis_y_points[selected_index]);\n    });\n  }\n\n  positioning_values_on_board(points) {\n    const base = board.width / 4;\n\n    const from = {};\n    const to = {};\n\n    if (utils.is_vertical(points)) {\n      // from\n      from.x = points.from[0] * board.width;\n      from.y = points.from[1] * (board.height / 2) + base;\n\n      // to\n      to.x = points.to[0] * board.width;\n      to.y = points.to[1] * (board.height / 2) - base;\n    } else {\n      // from\n      from.x = points.from[0] * board.width + base;\n      from.y = points.from[1] * (board.height / 2);\n\n      // to\n      to.x = points.to[0] * board.width - base;\n      to.y = points.to[1] * (board.height / 2);\n    }\n\n    return {\n      from: from,\n      to: to,\n    };\n  }\n}\n\n\n//# sourceURL=webpack://the-bunker/./src/lib/Numeral_LED_Matrix.js?");

/***/ }),

/***/ "./src/lib/Project.js":
/*!****************************!*\
  !*** ./src/lib/Project.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Project)\n/* harmony export */ });\nclass Project {\n  constructor(obj) {\n    this.name = obj.name;\n    this.period = obj.period;\n    this.images = obj.images;\n    this.desc = obj.desc;\n    this.func = obj.func;\n    this.github = obj.github;\n    this.url = obj.url;\n    this.stack = obj.stack;\n  }\n\n  createEl() {\n    const el = `\n          <div\n            class=\"rounded overflow-hidden shadow-[0px_8px_16px_gray] py-20 mb-28\"\n            key=\"\"\n          >\n            <div class=\"mb-4\">\n              <h3 class=\"text-2xl py-4 font-medium text-center\">${\n                this.name\n              }</h3>\n              <div class=\"text-sm py-2 font-medium text-gray-400 text-center\">\n              ${this.period}\n              </div>\n            </div>\n            <div class=\"flex flex-col md:flex-row justify-evenly px-4\">\n              <div class=\"w-full md:w-1/2 p-4\">\n                <div\n                  class=\"border h-80 md:h-full bg-[url(${\n                    this.images[0]\n                  })] bg-contain bg-center bg-no-repeat\"\n                ></div>\n              </div>\n              <!-- 설명, 스택 -->\n              <div class=\"w-full md:w-1/2 p-4\">\n                <p>\n                ${this.desc}\n                </p>\n                <div class=\"flex justify-end\">\n                  <button\n                    class=\"px-8 py-3 my-5 bg-gray-800 text-white text-sm font-normal grid content-center\"\n                    onClick=\"showModal('${this.images}')\"\n                  >\n                    상세 보기\n                  </button>\n                </div>\n\n                <hr />\n                <div class=\"flex flex-col p-5 text-sm\">\n                  <div class=\"flex py-2\">\n                    <div class=\"w-1/3 md:w-1/3 font-normal pl-2\">\n                      주요 기능\n                    </div>\n                    <div class=\"w-2/3 md:w-2/3\">\n                    ${this.func}\n                    </div>\n                  </div>\n                  ${\n                    this.github\n                      ? `<div class=\"flex py-2\">\n                        <div class=\"w-1/3 md:w-1/3 font-normal pl-2\">\n                          GitHub\n                        </div>\n                        <div class=\"w-2/3 md:w-2/3\">\n                          <a\n                            href=\"${this.github}\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            ${this.github}\n                          </a>\n                        </div>\n                      </div>`\n                      : \"\"\n                  }\n                  ${\n                    this.url\n                      ? `<div class=\"flex py-2\">\n                    <div class=\"w-1/3 md:w-1/3 font-normal pl-2\">\n                      URL\n                    </div>\n                    <div class=\"w-2/3 md:w-2/3\">\n                      <a\n                        href=\"${this.url}\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                      ${this.url}\n                      </a>\n                    </div>\n                  </div>`\n                      : \"\"\n                  }\n                 \n                  <div class=\"flex py-2\">\n                    <div class=\"w-1/3 md:w-1/3 font-normal pl-2\">\n                      기술 스택\n                    </div>\n                    <div class=\"w-2/3 md:w-2/3\">\n                    ${this.stack}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n    `;\n\n    document.querySelector(\"#projects\").insertAdjacentHTML(\"beforeend\", el);\n  }\n}\n\n\n//# sourceURL=webpack://the-bunker/./src/lib/Project.js?");

/***/ }),

/***/ "./src/lib/SkillBars.js":
/*!******************************!*\
  !*** ./src/lib/SkillBars.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SkillBars)\n/* harmony export */ });\nclass SkillBars {\n  constructor(obj) {\n    this.category = obj.category;\n    this.name = obj.name;\n    this.percentage = obj.percentage;\n    this.color = obj.color;\n  }\n\n  createEl(idx, all) {\n    const el = `\n        <div>\n          ${\n            idx === 0\n              ? `<div class='font-semibold'>${this.category}</div>`\n              : this.category !== all[idx - 1].category\n              ? `<div class='pt-10 font-semibold'>${this.category}</div>`\n              : \"\"\n          }\n          <div class=\"my-1.5 w-full bg-gray-100 rounded-full\">\n            <div class=\"bg-${\n              this.color\n            }-600 text-sm font-medium text-white text-center p-1.5 leading-none rounded-full\" style=\"width: ${\n      this.percentage\n    }%\"> ${this.name}</div>\n          </div>\n        </div>\n    `;\n    document.querySelector(\"#skills\").insertAdjacentHTML(\"beforeend\", el);\n  }\n}\n\n\n//# sourceURL=webpack://the-bunker/./src/lib/SkillBars.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/main.js");
/******/ 	
/******/ })()
;